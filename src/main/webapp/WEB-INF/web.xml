<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
  <display-name>Pr√°ctica3</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <context-param>
      <param-name>URL</param-name>
      <param-value>jdbc:mysql://oraclepr.uco.es:3306/i02dipea</param-value>
  </context-param>
  <context-param>
      <param-name>User</param-name>
      <param-value>i02dipea</param-value>
  </context-param>
  <context-param>
      <param-name>Password</param-name>
      <param-value>BDPW</param-value>
  </context-param>
  <context-param>
      <param-name>CheckUser</param-name>
      <param-value>SELECT Email FROM Users WHERE Email =</param-value>
  </context-param>
  <context-param>
      <param-name>CheckPassword</param-name>
      <param-value>SELECT Password FROM Users WHERE Email</param-value>
  </context-param>
  <context-param>
      <param-name>CheckRole</param-name>
      <param-value>SELECT Rol FROM Users WHERE Email =</param-value>
  </context-param>
  <context-param>
      <param-name>InsertUser</param-name>
      <param-value>INSERT INTO Users (Name, BirthDay, InscriptionD, Email, Password, Rol) values(?,?,?,?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>GetUser</param-name>
      <param-value>SELECT * FROM Users WHERE Email</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateEmailUser</param-name>
      <param-value>UPDATE Users set Email</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateBirthUser</param-name>
      <param-value>UPDATE Users set BirthDay</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateNameUser</param-name>
      <param-value>UPDATE Users set Name</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateRolUser</param-name>
      <param-value>UPDATE Users set Rol</param-value>
  </context-param>
  <context-param>
      <param-name>UpdatePassUser</param-name>
      <param-value>UPDATE Users set Password</param-value>
  </context-param>
  <context-param>
      <param-name>InfoAllUsers</param-name>
      <param-value>SELECT * FROM Users ORDER BY Email</param-value>
  </context-param>
  <context-param>
      <param-name>SeniorityUser</param-name>
      <param-value>SELECT InscriptionD FROM Users WHERE Email</param-value>
  </context-param>
  <context-param>
      <param-name>SeniorityUserArr</param-name>
      <param-value>SELECT InscriptionD FROM Users ORDER BY Email</param-value>
  </context-param>
  <context-param>
      <param-name>CheckTrack</param-name>
      <param-value>SELECT Name FROM Tracks WHERE Name</param-value>
  </context-param>
  <context-param>
      <param-name>InsertTrack</param-name>
      <param-value>INSERT INTO Tracks (Name, State, Difficulty, MaxKarts) values(?,?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>TracksMaintenance</param-name>
      <param-value>SELECT * FROM Tracks WHERE State</param-value>
  </context-param>
  <context-param>
      <param-name>GetTrack</param-name>
      <param-value>SELECT * FROM Tracks WHERE Name</param-value>
  </context-param>
  <context-param>
      <param-name>GetTrackType</param-name>
      <param-value>SELECT * FROM Tracks WHERE Difficulty</param-value>
  </context-param>
  <context-param>
      <param-name># State</param-name>
      <param-value>True (1)  -> Pista disponible para reservas</param-value>
  </context-param>
  <context-param>
      <param-name># State</param-name>
      <param-value>False (0) -> Pista no disponible para reservas</param-value>
  </context-param>
  <context-param>
      <param-name>GetTracksDificultyMinKarts</param-name>
      <param-value>SELECT * FROM Tracks WHERE State</param-value>
  </context-param>
  <context-param>
      <param-name>GetListTrack</param-name>
      <param-value>SELECT * FROM Tracks WHERE State</param-value>
  </context-param>
  <context-param>
      <param-name>GetAllTrack</param-name>
      <param-value>SELECT * FROM Tracks ORDER BY Name</param-value>
  </context-param>
  <context-param>
      <param-name>ModifyStateTrack</param-name>
      <param-value>UPDATE Tracks set State</param-value>
  </context-param>
  <context-param>
      <param-name>GetTrackDisponible</param-name>
      <param-value>SELECT * FROM Tracks WHERE State</param-value>
  </context-param>
  <context-param>
      <param-name>AssociateTrackToKart</param-name>
      <param-value>UPDATE Karts set TrackName</param-value>
  </context-param>
  <context-param>
      <param-name>GetKart</param-name>
      <param-value>SELECT * FROM Karts WHERE Id</param-value>
  </context-param>
  <context-param>
      <param-name>GetKartTrack</param-name>
      <param-value>SELECT COUNT(Id) FROM Karts WHERE (State</param-value>
  </context-param>
  <context-param>
      <param-name>InsertKart</param-name>
      <param-value>INSERT INTO Karts (Id, Child, State) values(?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>GetListKartNoAssociated</param-name>
      <param-value>SELECT * FROM Karts WHERE TrackName IS NULL AND Child</param-value>
  </context-param>
  <context-param>
      <param-name>GetAllKart</param-name>
      <param-value>SELECT * FROM Karts ORDER BY Id</param-value>
  </context-param>
  <context-param>
      <param-name>ModifyStateKart</param-name>
      <param-value>UPDATE Karts set State</param-value>
  </context-param>
  <context-param>
      <param-name># Child</param-name>
      <param-value>True(1)</param-value>
  </context-param>
  <context-param>
      <param-name># Child</param-name>
      <param-value>False(0)</param-value>
  </context-param>
  <context-param>
      <param-name>InsertChildReservationBono</param-name>
      <param-value>INSERT INTO Reservations (Email, Date, Lenght, Price, Discount, Track, Type, ChildremNumber, IdBono) values(?,?,?,?,?,?,?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>InsertChildReservationIndiv</param-name>
      <param-value>INSERT INTO Reservations (Email, Date, Lenght, Price, Discount, Track, Type, ChildremNumber) values(?,?,?,?,?,?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>InsertAdultReservationBono</param-name>
      <param-value>INSERT INTO Reservations (Email, Date, Lenght, Price, Discount, Track, Type, AdultsNumber, IdBono) values(?,?,?,?,?,?,?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>InsertAdultReservationIndiv</param-name>
      <param-value>INSERT INTO Reservations (Email, Date, Lenght, Price, Discount, Track, Type, AdultsNumber) values(?,?,?,?,?,?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>InsertFamReservationBono</param-name>
      <param-value>INSERT INTO Reservations (Email, Date, Lenght, Price, Discount, Track, Type, ChildremNumber, AdultsNumber, IdBono) values(?,?,?,?,?,?,?,?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>InsertFamReservationIndiv</param-name>
      <param-value>INSERT INTO Reservations (Email, Date, Lenght, Price, Discount, Track, Type, ChildremNumber, AdultsNumber) values(?,?,?,?,?,?,?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>InfoMyReservation</param-name>
      <param-value>SELECT * FROM Reservations WHERE Email =</param-value>
  </context-param>
  <context-param>
      <param-name>ReservationsDayTrack</param-name>
      <param-value>SELECT * FROM Reservations WHERE TrackName</param-value>
  </context-param>
  <context-param>
      <param-name>MaxIdReservation</param-name>
      <param-value>SELECT MAX(Id) FROM Reservations</param-value>
  </context-param>
  <context-param>
      <param-name>CheckDateReservation</param-name>
      <param-value>SELECT * FROM Reservations WHERE ? < Date AND Date < ? AND Track</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateEmailRes</param-name>
      <param-value>UPDATE Reservations set Email</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateDateRes</param-name>
      <param-value>UPDATE Reservations set Date</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateLenghtRes</param-name>
      <param-value>UPDATE Reservations set Lenght</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateTrackRes</param-name>
      <param-value>UPDATE Reservations set Track</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateNAdultRes</param-name>
      <param-value>UPDATE Reservations set AdultsNumber</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateNChildRes</param-name>
      <param-value>UPDATE Reservations set AdultsNumber</param-value>
  </context-param>
  <context-param>
      <param-name>CheckReservations</param-name>
      <param-value>SELECT count(id) FROM Reservations WHERE Email =</param-value>
  </context-param>
  <context-param>
      <param-name>CheckFirstReservation</param-name>
      <param-value>SELECT Date FROM Reservations WHERE Email</param-value>
  </context-param>
  <context-param>
      <param-name>CountReservation</param-name>
      <param-value>SELECT (SELECT COUNT(id) FROM Reservations WHERE Email</param-value>
  </context-param>
  <context-param>
      <param-name>GetAllResFut</param-name>
      <param-value>SELECT * FROM Reservations WHERE Date > ?</param-value>
  </context-param>
  <context-param>
      <param-name>DeleteReservation</param-name>
      <param-value>DELETE FROM Reservations WHERE Id</param-value>
  </context-param>
  <context-param>
      <param-name>GetReservationDate</param-name>
      <param-value>SELECT * FROM Reservations WHERE ? < Date AND Date < ? AND Email</param-value>
  </context-param>
  <context-param>
      <param-name>CheckBono</param-name>
      <param-value>SELECT * FROM Bono WHERE Email</param-value>
  </context-param>
  <context-param>
      <param-name>CheckBonoById</param-name>
      <param-value>SELECT * FROM Bono WHERE IdNumber</param-value>
  </context-param>
  <context-param>
      <param-name>UpdateSessionBono</param-name>
      <param-value>UPDATE Bono set SessionNumber</param-value>
  </context-param>
  <context-param>
      <param-name>InsertBono</param-name>
      <param-value>INSERT INTO Bono (IdNumber, SessionNumber, DateCreated, Type, Email) values (?,?,?,?,?)</param-value>
  </context-param>
  <context-param>
      <param-name>MaxIdBono</param-name>
      <param-value>SELECT MAX(IdNumber) FROM Bono</param-value>
  </context-param>
</web-app>